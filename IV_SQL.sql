-- MySQL Script generated by MySQL Workbench
-- Mon Nov 29 21:13:35 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema TFI
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema TFI
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `TFI` DEFAULT CHARACTER SET utf8 ;
USE `TFI` ;

-- -----------------------------------------------------
-- Table `TFI`.`PERSONA`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TFI`.`PERSONA` (
  `dni` INT NOT NULL,
  `Nombre` VARCHAR(45) NOT NULL,
  `Apellido` VARCHAR(45) NOT NULL,
  `FechaDeNacimiento` DATE NOT NULL,
  `Telefono` VARCHAR(15) NOT NULL,
  `Direccion` VARCHAR(45) NOT NULL,
  `ObraSocial` VARCHAR(45) NOT NULL,
  `sexo` VARCHAR(15) NOT NULL,
  PRIMARY KEY (`dni`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TFI`.`TESTEO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TFI`.`TESTEO` (
  `IdTesteo` INT NOT NULL AUTO_INCREMENT,
  `Tipo` VARCHAR(45) NOT NULL,
  `Lugar` VARCHAR(45) NOT NULL,
  `Fecha` VARCHAR(45) NOT NULL,
  `Resultado` VARCHAR(45) NOT NULL,
  `PERSONA_dni` INT NOT NULL,
  PRIMARY KEY (`IdTesteo`, `PERSONA_dni`),
  INDEX `fk_TESTEO_PERSONA1_idx` (`PERSONA_dni` ASC),
  CONSTRAINT `fk_TESTEO_PERSONA1`
    FOREIGN KEY (`PERSONA_dni`)
    REFERENCES `TFI`.`PERSONA` (`dni`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TFI`.`HOSPITAL`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TFI`.`HOSPITAL` (
  `IdHospital` INT NOT NULL AUTO_INCREMENT,
  `Nombre` VARCHAR(45) NOT NULL,
  `Calle` VARCHAR(45) NOT NULL,
  `Numero` INT NOT NULL,
  `Localidad` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`IdHospital`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TFI`.`PLANTA`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TFI`.`PLANTA` (
  `IdPlanta` INT NOT NULL AUTO_INCREMENT,
  `Especialidad` VARCHAR(45) NOT NULL,
  `IdHospital` INT NOT NULL,
  PRIMARY KEY (`IdPlanta`, `IdHospital`),
  INDEX `fk_PLANTA_HOSPITAL1_idx` (`IdHospital` ASC),
  CONSTRAINT `fk_PLANTA_HOSPITAL1`
    FOREIGN KEY (`IdHospital`)
    REFERENCES `TFI`.`HOSPITAL` (`IdHospital`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TFI`.`ENFERMERO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TFI`.`ENFERMERO` (
  `IdEnfermero` INT NOT NULL AUTO_INCREMENT,
  `Enfermero_dni` INT NOT NULL,
  `TelefonoT` VARCHAR(15) NOT NULL,
  `IdPlanta` INT NOT NULL,
  `IdHospital` INT NOT NULL,
  PRIMARY KEY (`IdEnfermero`, `Enfermero_dni`),
  INDEX `fk_ENFERMERO_PLANTA1_idx` (`IdPlanta` ASC, `IdHospital` ASC),
  UNIQUE INDEX `Enfermero_dni_UNIQUE` (`Enfermero_dni` ASC),
  CONSTRAINT `fk_ENFERMERO_PERSONA1`
    FOREIGN KEY (`Enfermero_dni`)
    REFERENCES `TFI`.`PERSONA` (`dni`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ENFERMERO_PLANTA1`
    FOREIGN KEY (`IdPlanta` , `IdHospital`)
    REFERENCES `TFI`.`PLANTA` (`IdPlanta` , `IdHospital`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TFI`.`PACIENTE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TFI`.`PACIENTE` (
  `Paciente_dni` INT NOT NULL,
  `NroEmergencia` VARCHAR(45) NOT NULL,
  `Responsabilidad` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Paciente_dni`),
  CONSTRAINT `fk_PACIENTE_PERSONA1`
    FOREIGN KEY (`Paciente_dni`)
    REFERENCES `TFI`.`PERSONA` (`dni`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TFI`.`MEDICO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TFI`.`MEDICO` (
  `IdMedico` INT NOT NULL AUTO_INCREMENT,
  `Medico_dni` INT NOT NULL,
  `Especialidad` VARCHAR(45) NOT NULL,
  `TelefonoT` VARCHAR(15) NOT NULL,
  PRIMARY KEY (`IdMedico`, `Medico_dni`),
  UNIQUE INDEX `Medico_dni_UNIQUE` (`Medico_dni` ASC),
  CONSTRAINT `fk_MEDICO_PERSONA`
    FOREIGN KEY (`Medico_dni`)
    REFERENCES `TFI`.`PERSONA` (`dni`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TFI`.`VIAJE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TFI`.`VIAJE` (
  `IdViaje` INT NOT NULL AUTO_INCREMENT,
  `Riesgo` TINYINT NOT NULL,
  `Lugar` VARCHAR(45) NOT NULL,
  `Fecha` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`IdViaje`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TFI`.`PATOLOGIA`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TFI`.`PATOLOGIA` (
  `IdPatologia` INT NOT NULL AUTO_INCREMENT,
  `Tipo` VARCHAR(45) NOT NULL,
  `Nombre` VARCHAR(45) NOT NULL,
  `Descripcion` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`IdPatologia`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TFI`.`TRATAMIENTO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TFI`.`TRATAMIENTO` (
  `IdTratamiento` INT NOT NULL AUTO_INCREMENT,
  `Observaciones` VARCHAR(45) NOT NULL,
  `FechaAlta` VARCHAR(45) NOT NULL,
  `FechaInicio` VARCHAR(45) NOT NULL,
  `Medico_dni` INT NOT NULL,
  `IdMedico` INT NOT NULL,
  PRIMARY KEY (`IdTratamiento`, `Medico_dni`, `IdMedico`),
  INDEX `fk_TRATAMIENTO_MEDICO1_idx` (`Medico_dni` ASC, `IdMedico` ASC),
  CONSTRAINT `fk_TRATAMIENTO_MEDICO1`
    FOREIGN KEY (`Medico_dni` , `IdMedico`)
    REFERENCES `TFI`.`MEDICO` (`Medico_dni` , `IdMedico`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TFI`.`HABITACION`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TFI`.`HABITACION` (
  `NroHabitacion` INT NOT NULL,
  `NroCamas` INT NOT NULL,
  `IdPlanta` INT NOT NULL,
  `IdHospital` INT NOT NULL,
  PRIMARY KEY (`NroHabitacion`, `IdPlanta`, `IdHospital`),
  INDEX `fk_HABITACION_PLANTA1_idx` (`IdPlanta` ASC, `IdHospital` ASC),
  CONSTRAINT `fk_HABITACION_PLANTA1`
    FOREIGN KEY (`IdPlanta` , `IdHospital`)
    REFERENCES `TFI`.`PLANTA` (`IdPlanta` , `IdHospital`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TFI`.`TRABAJO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TFI`.`TRABAJO` (
  `IdTrabajo` INT NOT NULL AUTO_INCREMENT,
  `EsRiesgo` TINYINT NOT NULL,
  `Categoria` VARCHAR(45) NOT NULL,
  `PERSONA_dni` INT NOT NULL,
  PRIMARY KEY (`IdTrabajo`),
  INDEX `fk_TRABAJO_PERSONA1_idx` (`PERSONA_dni` ASC),
  CONSTRAINT `fk_TRABAJO_PERSONA1`
    FOREIGN KEY (`PERSONA_dni`)
    REFERENCES `TFI`.`PERSONA` (`dni`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TFI`.`REALIZA`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TFI`.`REALIZA` (
  `IdRealiza` INT NOT NULL AUTO_INCREMENT,
  `IdViaje` INT NOT NULL,
  `dni` INT NOT NULL,
  PRIMARY KEY (`IdRealiza`, `IdViaje`, `dni`),
  INDEX `fk_VIAJE_has_PACIENTE_PACIENTE1_idx` (`dni` ASC),
  INDEX `fk_VIAJE_has_PACIENTE_VIAJE1_idx` (`IdViaje` ASC),
  CONSTRAINT `fk_VIAJE_has_PACIENTE_VIAJE1`
    FOREIGN KEY (`IdViaje`)
    REFERENCES `TFI`.`VIAJE` (`IdViaje`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_VIAJE_has_PACIENTE_PACIENTE1`
    FOREIGN KEY (`dni`)
    REFERENCES `TFI`.`PACIENTE` (`Paciente_dni`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TFI`.`ESTADO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TFI`.`ESTADO` (
  `IdEstado` INT NOT NULL AUTO_INCREMENT,
  `Nombre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`IdEstado`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TFI`.`HISTORIAL`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TFI`.`HISTORIAL` (
  `IdHistorial` INT NOT NULL AUTO_INCREMENT,
  `dni` INT NOT NULL,
  `IdPatologia` INT NOT NULL,
  `Hereditario` TINYINT NOT NULL,
  `Preexistente` TINYINT NOT NULL,
  `Fecha` DATE NOT NULL,
  PRIMARY KEY (`IdHistorial`, `dni`, `IdPatologia`, `Fecha`),
  INDEX `fk_PACIENTE_has_ENFERMEDAD_ENFERMEDAD1_idx` (`IdPatologia` ASC),
  INDEX `fk_PACIENTE_has_ENFERMEDAD_PACIENTE1_idx` (`dni` ASC),
  CONSTRAINT `fk_PACIENTE_has_ENFERMEDAD_PACIENTE1`
    FOREIGN KEY (`dni`)
    REFERENCES `TFI`.`PACIENTE` (`Paciente_dni`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PACIENTE_has_ENFERMEDAD_ENFERMEDAD1`
    FOREIGN KEY (`IdPatologia`)
    REFERENCES `TFI`.`PATOLOGIA` (`IdPatologia`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TFI`.`DIAGNOSTICO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TFI`.`DIAGNOSTICO` (
  `IdDiagnostico` INT NOT NULL AUTO_INCREMENT,
  `IdPatodologia` INT NOT NULL,
  `dni` INT NOT NULL,
  `Informe` VARCHAR(45) NULL,
  `Fecha` DATE NOT NULL,
  `Motivo` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`IdDiagnostico`, `IdPatodologia`, `dni`),
  INDEX `fk_MEDICO_has_ENFERMEDAD_ENFERMEDAD1_idx` (`IdPatodologia` ASC),
  INDEX `fk_MEDICO_has_ENFERMEDAD_MEDICO1_idx` (`dni` ASC),
  CONSTRAINT `fk_MEDICO_has_ENFERMEDAD_MEDICO1`
    FOREIGN KEY (`dni`)
    REFERENCES `TFI`.`MEDICO` (`Medico_dni`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_MEDICO_has_ENFERMEDAD_ENFERMEDAD1`
    FOREIGN KEY (`IdPatodologia`)
    REFERENCES `TFI`.`PATOLOGIA` (`IdPatologia`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TFI`.`CURA`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TFI`.`CURA` (
  `IdCura` INT NOT NULL AUTO_INCREMENT,
  `IdPatologia` INT NOT NULL,
  `IdTratamiento` INT NOT NULL,
  PRIMARY KEY (`IdCura`, `IdPatologia`, `IdTratamiento`),
  INDEX `fk_ENFERMEDAD_has_TRATAMIENTO_TRATAMIENTO1_idx` (`IdTratamiento` ASC),
  INDEX `fk_ENFERMEDAD_has_TRATAMIENTO_ENFERMEDAD1_idx` (`IdPatologia` ASC),
  CONSTRAINT `fk_ENFERMEDAD_has_TRATAMIENTO_ENFERMEDAD1`
    FOREIGN KEY (`IdPatologia`)
    REFERENCES `TFI`.`PATOLOGIA` (`IdPatologia`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ENFERMEDAD_has_TRATAMIENTO_TRATAMIENTO1`
    FOREIGN KEY (`IdTratamiento`)
    REFERENCES `TFI`.`TRATAMIENTO` (`IdTratamiento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TFI`.`TRABAJA`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TFI`.`TRABAJA` (
  `IdHospital` INT NOT NULL,
  `Medico_dni` INT NOT NULL,
  `Turno` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`IdHospital`, `Medico_dni`),
  INDEX `fk_HOSPITAL_has_MEDICO_MEDICO1_idx` (`Medico_dni` ASC),
  INDEX `fk_HOSPITAL_has_MEDICO_HOSPITAL1_idx` (`IdHospital` ASC),
  CONSTRAINT `fk_HOSPITAL_has_MEDICO_HOSPITAL1`
    FOREIGN KEY (`IdHospital`)
    REFERENCES `TFI`.`HOSPITAL` (`IdHospital`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_HOSPITAL_has_MEDICO_MEDICO1`
    FOREIGN KEY (`Medico_dni`)
    REFERENCES `TFI`.`MEDICO` (`Medico_dni`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TFI`.`IMPLICA`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TFI`.`IMPLICA` (
  `IdTratamiento` INT NOT NULL,
  `Medico_dni` INT NOT NULL,
  `IdMedico` INT NOT NULL,
  `FechaInicio` DATE NOT NULL,
  `FechaAlta` DATE NOT NULL,
  `Paciente_dni` INT NOT NULL,
  PRIMARY KEY (`IdTratamiento`, `Medico_dni`, `IdMedico`, `Paciente_dni`),
  INDEX `fk_PACIENTE_has_TRATAMIENTO_TRATAMIENTO1_idx` (`IdTratamiento` ASC, `Medico_dni` ASC, `IdMedico` ASC),
  INDEX `fk_IMPLICA_PACIENTE1_idx` (`Paciente_dni` ASC),
  CONSTRAINT `fk_PACIENTE_has_TRATAMIENTO_TRATAMIENTO1`
    FOREIGN KEY (`IdTratamiento` , `Medico_dni` , `IdMedico`)
    REFERENCES `TFI`.`TRATAMIENTO` (`IdTratamiento` , `Medico_dni` , `IdMedico`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_IMPLICA_PACIENTE1`
    FOREIGN KEY (`Paciente_dni`)
    REFERENCES `TFI`.`PACIENTE` (`Paciente_dni`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TFI`.`TELEFONO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TFI`.`TELEFONO` (
  `IdTelefono` INT NOT NULL AUTO_INCREMENT,
  `Numero` VARCHAR(15) NOT NULL,
  `IdHospital` INT NOT NULL,
  PRIMARY KEY (`IdTelefono`, `IdHospital`),
  INDEX `fk_TELEFONO_HOSPITAL1_idx` (`IdHospital` ASC),
  CONSTRAINT `fk_TELEFONO_HOSPITAL1`
    FOREIGN KEY (`IdHospital`)
    REFERENCES `TFI`.`HOSPITAL` (`IdHospital`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TFI`.`VACUNA`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TFI`.`VACUNA` (
  `IdVacuna` INT NOT NULL AUTO_INCREMENT,
  `Nombre` VARCHAR(45) NOT NULL,
  `Cantidad` INT NOT NULL,
  `NumeroLote` INT NOT NULL,
  PRIMARY KEY (`IdVacuna`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TFI`.`CARNET`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TFI`.`CARNET` (
  `IdCarnet` INT NOT NULL AUTO_INCREMENT,
  `IdVacuna` INT NOT NULL,
  `FechaVacunacion` VARCHAR(45) NOT NULL,
  `Persona_Dni` INT NOT NULL,
  `IdEnfermero` INT NOT NULL,
  `Enfermero_dni` INT NOT NULL,
  PRIMARY KEY (`IdCarnet`, `IdVacuna`, `Persona_Dni`, `IdEnfermero`, `Enfermero_dni`),
  INDEX `fk_CARNET_VACUNA1_idx` (`IdVacuna` ASC),
  INDEX `fk_CARNET_PERSONA1_idx` (`Persona_Dni` ASC),
  INDEX `fk_CARNET_ENFERMERO1_idx` (`IdEnfermero` ASC, `Enfermero_dni` ASC),
  CONSTRAINT `fk_CARNET_VACUNA1`
    FOREIGN KEY (`IdVacuna`)
    REFERENCES `TFI`.`VACUNA` (`IdVacuna`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_CARNET_PERSONA1`
    FOREIGN KEY (`Persona_Dni`)
    REFERENCES `TFI`.`PERSONA` (`dni`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_CARNET_ENFERMERO1`
    FOREIGN KEY (`IdEnfermero` , `Enfermero_dni`)
    REFERENCES `TFI`.`ENFERMERO` (`IdEnfermero` , `Enfermero_dni`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TFI`.`INTERNACION`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TFI`.`INTERNACION` (
  `Paciente_dni` INT NOT NULL,
  `NroHabitacion` INT NOT NULL,
  `IdPlanta` INT NOT NULL,
  `IdHospital` INT NOT NULL,
  `FechaIngreso` DATE NOT NULL,
  `FechaAlta` DATE NOT NULL,
  `Hora` TIME NOT NULL,
  PRIMARY KEY (`Paciente_dni`, `NroHabitacion`, `IdPlanta`, `IdHospital`, `FechaIngreso`, `Hora`),
  INDEX `fk_PACIENTE_has_HABITACION_HABITACION1_idx` (`NroHabitacion` ASC, `IdPlanta` ASC, `IdHospital` ASC),
  INDEX `fk_PACIENTE_has_HABITACION_PACIENTE1_idx` (`Paciente_dni` ASC),
  CONSTRAINT `fk_PACIENTE_has_HABITACION_PACIENTE1`
    FOREIGN KEY (`Paciente_dni`)
    REFERENCES `TFI`.`PACIENTE` (`Paciente_dni`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PACIENTE_has_HABITACION_HABITACION1`
    FOREIGN KEY (`NroHabitacion` , `IdPlanta` , `IdHospital`)
    REFERENCES `TFI`.`HABITACION` (`NroHabitacion` , `IdPlanta` , `IdHospital`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TFI`.`TENDRA`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TFI`.`TENDRA` (
  `Paciente_dni` INT NOT NULL,
  `IdEstado` INT NOT NULL,
  `Fecha` DATE NOT NULL,
  `Causa` VARCHAR(45) NOT NULL,
  `Hora` TIME NOT NULL,
  PRIMARY KEY (`Paciente_dni`, `IdEstado`, `Fecha`),
  INDEX `fk_PACIENTE_has_ESTADO_ESTADO1_idx` (`IdEstado` ASC),
  INDEX `fk_PACIENTE_has_ESTADO_PACIENTE1_idx` (`Paciente_dni` ASC),
  CONSTRAINT `fk_PACIENTE_has_ESTADO_PACIENTE1`
    FOREIGN KEY (`Paciente_dni`)
    REFERENCES `TFI`.`PACIENTE` (`Paciente_dni`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PACIENTE_has_ESTADO_ESTADO1`
    FOREIGN KEY (`IdEstado`)
    REFERENCES `TFI`.`ESTADO` (`IdEstado`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- ----------------------------------------------------------------------------------------------------------------------------------
-- ----------------------------------------------------------------------------------------------------------------------------------
-- -- -----------------------------------------------------
-- -- INGRESO DATOS A TABLA PERSONA
-- -- -----------------------------------------------------

INSERT INTO `tfi`.`persona`
(`dni`,`Nombre`,`Apellido`,`FechaDeNacimiento`,`Telefono`,`Direccion`,`ObraSocial`,`sexo`)
VALUES
-- PACIENTES 
(65525566,'Miguel','Diaz','1959-03-13','1515151','Misiones 151','OSDE','Masculino'),
(78812455,'Javier','Contreras','1939-06-16','43457632','Barcarce 151','OSDE','Masculino'),

(41256842,'Javier','Diaz','1999-03-16','15542731','Misiones 151','OSDE','Masculino'),
(10256664,'Micaela','Ahmad','1945-11-13','21850062 ','909 Kellie Key','PRENSA','Femenino'),
(41256586,'Juliana','Vargas','1999-06-18','37708659 ','5389 Feest Radial','SUBSIDIO','Femenino'),
(14562256,'Agustin','Martinez','2001-03-12','12871883  ','20418 Gerardo Summit','OSECAC','Masculino'),
(43567813,'Facundo','Kame','2001-03-12','34678797  ','20418 Gerardo Summit','OSECAC','Masculino'),
-- MEDICOS
(42566852,'Miranda','Casandra','1989-02-15','15633256','Corrientes 231','OSECAC','Femenino'),
(25642321,'Celeste','Martinez','1956-03-12','43475382 ','701 Libby Forks','OSDE','Femenino'),
(21566953,'Jimena','Diaz','1999-03-02','44802693','543 Lisa Squares','PRENSA','Femenino'),
(33557777,'Carlos','Raul','1949-05-12','85554555','664 Rachael Skyway','PAMI','Masculino'),
(22422778,'Jose','Diaz','1999-11-11','15555651','59930 Bayer Rapid','GALENO','Masculino'),
(77575256,'Pablo','Perez','1993-03-02','565544454','982 Beier Creek','MEDIFE','Masculino'),
-- ENFERMEROS
(35212336,'Facundo','Perez','1979-03-11','45413136 ','477 Flavio Islands','OSECAC','Masculino'),
(37825216,'Maria','Carvajar','1959-01-12','33502853 ','3163 Edgar Lodge','OSDE','Femenino'),
(41565212,'Raul','Diaz','2000-12-12','50583754 ','11544 Torphy Walks','OSECAC','Masculino');

-- -----------------------------------------------------
-- INGRESO DATOS A TABLA MEDICO
-- -----------------------------------------------------
INSERT INTO `tfi`.`medico`
(`Medico_dni`,`Especialidad`,`TelefonoT`)
VALUES
(33557777,'Odontologia','75757575'),
(22422778,'Infectologia','45455455'),
(77575256,'Neumonologia','127755677'),
(42566852,'cirugia','5715615'),
(25642321,'Pediatria','145919815'),
(21566953,'infectologia','651115889');
-- -----------------------------------------------------
-- INGRESO DATOS A TABLA ESTADO
-- -----------------------------------------------------
INSERT INTO `tfi`.`estado` (`Nombre`) VALUES ('Susceptible'),('Expuesto'),('Infectado'),('Recuperado'),('Muerto');

-- -----------------------------------------------------
-- INGRESO DATOS A TABLA PACIENTE
-- -----------------------------------------------------
-- Responsabilidad= Incumplido,  Normal, Responsable, Estricto
INSERT INTO `tfi`.`paciente` (`Paciente_dni`,`NroEmergencia`,`Responsabilidad`) VALUES
(41256842,'34567897','Incumplido'),
(41256586,'44554556','Incumplido'),
(10256664,'15555569','Normal'),
(21566953,'44545775','Responsable'),
(14562256,'57977575','Estricto'),
(43567813,'45457755','Estricto'),
(65525566,'47785755','Incumplido'),
(78812455,'66456886','Incumplido')
;


-- -----------------------------------------------------
-- INGRESO DATOS A TABLA TENDRA
-- -----------------------------------------------------
INSERT INTO `tfi`.`tendra`
(`Paciente_dni`,`IdEstado`,`Fecha`,`Causa`,`Hora`)
VALUES
(41256842,1,'2021-02-01','Exposicion lejana',''),
(41256586,2,'2021-01-02','Contacto estrecho',''),
(10256664,3,'2021-04-05','Sintomas Notables',''),
(21566953,4,'2021-05-04','',''),
(14562256,5,'2021-06-03','Paro CardioRespiratorio','11:20'),
(43567813,3,'2021-07-02','Sintomas Notables',''),
(65525566,3,'2021-05-12','Sintomas Notables',''),
(78812455,3,'2021-06-10','Sintomas Notables','')
;



-- -----------------------------------------------------
-- INGRESO DATOS A TABLA HOSPITAL
-- -----------------------------------------------------
INSERT INTO `tfi`.`hospital`
(`Nombre`,`Calle`,`Numero`,`Localidad`)
VALUES
('Sanatorio 9 De Julio','25 de Mayo','372','San Miguel De Tucuman'),
('Hospital del Niño Jesús','Hungría','750','San Miguel De Tucuman');


-- -----------------------------------------------------
-- INGRESO DATOS A TABLA PLANTA
-- -----------------------------------------------------
INSERT INTO `tfi`.`planta`
(`Especialidad`,`idHospital`)
VALUES
('Pediatria',1),
('Radiografia',1),
('Cirugia',1),
('Infectologia',1),
('Pediatria',2),
('Radiografia',2);

-- -----------------------------------------------------
-- INGRESO DATOS A TABLA HABITACION
-- -----------------------------------------------------

INSERT INTO `tfi`.`habitacion`
(`NroHabitacion`,`NroCamas`,`IdPlanta`,`IdHospital`)
VALUES
(12,3,1,1),
(2,4,1,1),
(2,3,6,2),
(2,3,5,2);

-- -----------------------------------------------------
-- INGRESO DATOS A TABLA PATOLOGIA
-- -----------------------------------------------------
-- tipo= Enfermedad, Transtorno, Discapacidad

INSERT INTO `tfi`.`patologia`
(`Tipo`,`Nombre`,`Descripcion`)
VALUES
('Enfermedad','Cov19','Delta'),
('Enfermedad','Cov19','India'),
('Enfermedad','Cov19','China'),
('Enfermedad','Diabetes','Tipo A'),
('Enfermedad','Hipertension Arterial','Primaria'),
('Enfermedad','Resfrio','Comun'),
('Discapacidad','Ceguera','Completa'),
('Transtorno','Anorexia','Nerviosa');

-- -----------------------------------------------------
-- INGRESO DATOS A TABLA HISTORIAL
-- -----------------------------------------------------
INSERT INTO `tfi`.`historial`
(`dni`,`IdPatologia`,`Hereditario`,`Preexistente`,`Fecha`)
VALUES
(21566953,1,false,false,'2020-07-02'),
(21566953,4,false,true,'2019-06-12'),
(21566953,6,false,false,'2019-06-12');

-- -----------------------------------------------------
-- INGRESO DATOS A TABLA TRATAMIENTO
-- -----------------------------------------------------
INSERT INTO `tfi`.`tratamiento`
(`Observaciones`, `FechaAlta`, `FechaInicio`, `Medico_dni`, `IdMedico`)
VALUES
('Se indica reposo 48 hs', '2020-07-02','2020-04-01', 42566852 , 4),
('Aislamiento por 2 semanas', '2020-07-15','2020-07-01', 42566852 , 4),
('Dieta Estricta', '2020-09-14','2020-01-01', 42566852 , 4);

-- -----------------------------------------------------
-- INGRESO DATOS A TABLA CURA
-- -----------------------------------------------------

INSERT INTO `tfi`.`cura`
(`IdPatologia`, `IdTratamiento`)
VALUES
(1,2),(2,2),(3,2),(6,1),(4,3);

-- -----------------------------------------------------
-- INGRESO DATOS A TABLA INTERNACION
-- -----------------------------------------------------

INSERT INTO `tfi`.`internacion`
(`Paciente_dni`, `NroHabitacion`, `IdPlanta`, `IdHospital`, `FechaIngreso`, `FechaAlta`, `Hora`)
VALUES
( 10256664, 2, 1, 1, '2021-07-01', '2022-07-15', '11:22:00'),
( 21566953, 12, 1, 1, '2020-07-01', '2020-07-15', '11:20:00'),
( 65525566, 12, 1, 1, '2020-07-01', '2021-07-15', '09:20:00'),
( 78812455, 2, 6, 2, '2020-07-01', '2021-07-15', '12:20:00')
;


-- -----------------------------------------------------
-- INGRESO DATOS A TABLA ENFERMERO
-- -----------------------------------------------------
INSERT INTO `tfi`.`enfermero`
(`Enfermero_dni`,`TelefonoT`,`IdPlanta`,`IdHospital`)
VALUES
(35212336,'34567892',1,1),
(37825216,'22255448',4,1),
(41565212,'44545922',2,1);

-- -----------------------------------------------------
-- INGRESO DATOS A TABLA TESTEO
-- -----------------------------------------------------
-- RESULTADO= Positivo, Negativo
INSERT INTO `tfi`.`testeo`
(`Tipo`,`Lugar`,`Fecha`,`Resultado`,`PERSONA_dni`)
VALUES
('Testeo Rapido','Hipodromo','2021-09-09','Positivo',42566852),
('Testeo Rapido','Hipodromo','2021-12-09','Positivo',42566852),
('Testeo Rapido','Burruyacu','2021-12-09','Negativo',10256664),
('Testeo Rapido','Alderetes','2021-11-10','Negativo',41256586),
('Testeo Rapido','San Miguel','2021-07-12','Negativo',21566953),
('Testeo Rapido','Concepcion','2021-04-09','Negativo',21566953);

-- -----------------------------------------------------
-- INGRESO DATOS A TABLA TRABAJO
-- -----------------------------------------------------
INSERT INTO `tfi`.`trabajo` (`EsRiesgo`,`Categoria`,`PERSONA_dni`) VALUES
(false,'Recursos Humanos',42566852),
(true,'Transporte',10256664);

-- -----------------------------------------------------
-- INGRESO DATOS A TABLA TELEFONO
-- -----------------------------------------------------
INSERT INTO `tfi`.`telefono`
(`Numero`,`IdHospital`)
VALUES
('080004000',1),
('080001000',2),
('381657822',1);

-- -----------------------------------------------------
-- INGRESO DATOS A TABLA TRABAJA
-- -----------------------------------------------------
INSERT INTO `tfi`.`trabaja`
(`IdHospital`,`Medico_dni`,`Turno`)
VALUES
(1,42566852,'Mañana'),(2,42566852,'Tarde'),
(1,25642321,'Mañana'),(2,25642321,'Tarde'),
(1,21566953,'Mañana'),(2,21566953,'Tarde'),
(1,33557777,'Mañana'),(1,22422778,'Tarde'),(1,77575256,'Mañana');


-- -----------------------------------------------------
-- INGRESO DATOS A TABLA VACUNA
-- -----------------------------------------------------
INSERT INTO `tfi`.`vacuna` (`Nombre`,`Cantidad`,`NumeroLote`) VALUES
('Aztrazeneca 1°Dosis',4000,1),
('Aztrazeneca 2°Dosis',4000,1),
('Sinopharm 1°Dosis',10000,1),
('Sinopharm 2°Dosis',10000,1),
('Sinovac',10000,1),
('Spunik V 1°Dosis',20000,2),
('Spunik V 2°Dosis',20000,2),
('BCG',30000,3),
('HEPATITIS B',30000,3);

-- -----------------------------------------------------
-- INGRESO DATOS A TABLA CARNET
-- -----------------------------------------------------

INSERT INTO `tfi`.`carnet`
(`IdVacuna`,`FechaVacunacion`,`Persona_Dni`,`IdEnfermero`,`Enfermero_dni`)
VALUES
(1,'2021-11-09',41256842,1,35212336),
(2,'2021-12-19',41256842,2,37825216),
(8,'2020-09-09',41256842,3,41565212),
(9,'2020-08-12',41256842,3,41565212),

(1,'2021-11-09',42566852,1,35212336),
(2,'2021-12-09',42566852,1,35212336),

(3,'2021-11-09',25642321,2,37825216),
(4,'2021-12-09',25642321,2,37825216),

(6,'2021-11-09',25642321,3,41565212),
(7,'2021-12-09',25642321,3,41565212),

(1,'2021-11-09',10256664,1,35212336),
(2,'2021-12-19',41256586,2,37825216),
(3,'2020-09-09',14562256,3,41565212),
(4,'2020-08-12',43567813,3,41565212),
(5,'2020-08-12',35212336,3,41565212),
(6,'2020-08-12',37825216,3,41565212),
(7,'2020-08-12',43567813,3,41565212);

-- -----------------------------------------------------
-- INGRESO DATOS A TABLA VIAJE
-- -----------------------------------------------------
INSERT INTO `tfi`.`viaje`
(`Riesgo`,`Lugar`,`Fecha`)
VALUES
(false,'TUCUMAN','2021-11-24'),
(true,'MENDOZA','2021-11-23');

-- -----------------------------------------------------
-- INGRESO DATOS A TABLA REALIZA
-- -----------------------------------------------------
INSERT INTO `tfi`.`realiza`
(`IdViaje`,`dni`)
VALUES
(2,10256664),
(2,43567813),
(1,41256842);

-- -------------------------------------------------------------------------------------------------------------------------------
-- ------------------------------------------------------------------------------------------------------------------------------
-- ---------------------------------------- CONSULTAS----------------------------
 
-- -- -----------------------------------------------------------------------------------------------------------
-- -- PRIMERA CONSULTA
-- 1) Datos del paciente, incluyendo enfermedades hereditarias o trastornos o discapacidad previa a la consulta.
-- -- -----------------------------------------------------------------------------------------------------------

select `persona`.`dni`,
    `persona`.`Nombre`,
    `persona`.`Apellido`,
    `persona`.`FechaDeNacimiento`,
    `persona`.`Telefono`,
    `persona`.`Direccion`,
    `persona`.`ObraSocial`,
    `persona`.`sexo`,
	`patologia`.`Tipo`,
    `patologia`.`Nombre`,
    `patologia`.`Descripcion`
    
FROM (((PERSONA INNER JOIN paciente ON Paciente_dni=dni) 
INNER JOIN historial ON historial.dni=Paciente_dni) 
INNER JOIN patologia ON historial.IdPatologia=patologia.IdPatologia) WHERE Paciente_dni='21566953';

-- -- ----------------------------------------------------------------------------------------------------
-- -- SEGUNDA CONSULTA
-- 2) Historial clínico del paciente completo, información del enfermedades que tuvo, fecha, tratamiento,
-- nombre del profesional que lo atendió y lugar en el que fue atendido.
-- -- ----------------------------------------------------------------------------------------------------
SELECT `paciente`.`Paciente_dni`,
	`persona`.`Nombre`,
    `persona`.`Apellido`,
    `persona`.`FechaDeNacimiento`,
    `persona`.`sexo`,
    `patologia`.`Tipo`,
    `patologia`.`Nombre`,
    `patologia`.`Descripcion`,
    `historial`.`Fecha`,
    `tratamiento`.`Observaciones`,
    `MED`.`Medico_dni`,
    `MED`.`nombre`,
    `MED`.`apellido`
FROM ((((((PERSONA INNER JOIN PACIENTE ON persona.dni=paciente.Paciente_dni) 
INNER JOIN HISTORIAL ON historial.dni=paciente.Paciente_dni)
INNER JOIN PATOLOGIA ON patologia.IdPatologia = historial.IdPatologia)
INNER JOIN CURA ON cura.IdPatologia = patologia.IdPatologia)
INNER JOIN TRATAMIENTO ON tratamiento.IdTratamiento = cura.IdTratamiento)
INNER JOIN MEDICO ON medico.Medico_dni = tratamiento.Medico_dni) 
INNER JOIN 
(
SELECT `medico`.`Medico_dni`,
    `PP`.`Nombre`,
    `PP`.`Apellido`
FROM (PERSONA AS PP INNER JOIN MEDICO ON PP.dni=medico.Medico_dni)
) AS MED ON MED.Medico_dni=medico.Medico_dni
where paciente.Paciente_dni='21566953'
;
-- -- ----------------------------------------------------------------------------------------------------
-- -- TERCERA CONSULTA
-- 3) Listado de pacientes que no recibieron el alta de internación.
-- -- ----------------------------------------------------------------------------------------------------


SELECT `persona`.`dni`,
    `persona`.`Nombre`,
    `persona`.`Apellido`
FROM ((PERSONA INNER JOIN PACIENTE ON persona.dni=paciente.Paciente_dni) 
INNER JOIN INTERNACION ON paciente.Paciente_dni = internacion.Paciente_dni)
WHERE internacion.FechaAlta>curdate();

-- -- ------------------------------------------------------------------------------------------------------------------
-- -- CUARTA CONSULTA
-- 4) Listar los pacientes que se encuentran internados por COVID en los nosocomios,
-- cual es el nro de habitación que se encuentran, estado del mismo y catalogado por nosocomio.
-- -- ------------------------------------------------------------------------------------------------------------------

SELECT `paciente`.`Paciente_dni`,
    `paciente`.`NroEmergencia`,
    `paciente`.`Responsabilidad`,
	`persona`.`Nombre`,
    `persona`.`Apellido`,
    `persona`.`FechaDeNacimiento`,
    `persona`.`sexo`,
	`patologia`.`Nombre`,
    `estado`.`Nombre`,
    `habitacion`.`NroHabitacion`,    
     `hospital`.`Nombre`

FROM ((((((((PERSONA INNER JOIN PACIENTE ON persona.dni=paciente.Paciente_dni) 
INNER JOIN HISTORIAL ON historial.dni=paciente.Paciente_dni)
INNER JOIN PATOLOGIA ON patologia.IdPatologia = historial.IdPatologia)

INNER JOIN TENDRA ON paciente.Paciente_dni = tendra.Paciente_Dni)
INNER JOIN ESTADO ON estado.IdEstado =tendra.IdEstado)

INNER JOIN INTERNACION ON paciente.Paciente_dni = internacion.Paciente_dni)
INNER JOIN HABITACION ON habitacion.NroHabitacion =internacion.NroHabitacion)
INNER JOIN HOSPITAL ON hospital.IdHospital = habitacion.IdHospital)



where patologia.IdPatologia= 1 OR patologia.IdPatologia= 2  OR patologia.IdPatologia = 3
ORDER BY hospital.Nombre;


-- -- ---------------------------------------------------------------------------------------------------------------
-- -- QUINTA CONSULTA
-- 5) Listar los profesionales de la salud especializados en infectología e incluyendo en que nosocomio trabajan.
-- -- ----------------------------------------------------------------------------------------------------------------

SELECT `persona`.`dni`,
    `persona`.`Nombre`,
    `persona`.`Apellido`,
    `hospital`.`Nombre`,
    `trabaja`.`Turno`
FROM (((PERSONA INNER JOIN MEDICO ON persona.dni=medico.Medico_dni)
INNER JOIN TRABAJA ON trabaja.Medico_dni = medico.Medico_dni)
INNER JOIN HOSPITAL ON hospital.IdHospital = trabaja.IdHospital)
WHERE medico.Especialidad='Infectologia';

-- -- ---------------------------------------------------------------------------------------------------------------
-- -- sexta CONSULTA
-- -- Listar los pacientes que estan con estado “contagiado” y que realizaron viajes a lugares de riesgo
-- -- ----------------------------------------------------------------------------------------------------------------
SELECT `paciente`.`Paciente_dni`,
    `persona`.`Nombre`,
    `persona`.`Apellido`,
    `paciente`.`NroEmergencia`,
    `paciente`.`Responsabilidad`,
    `viaje`.`Lugar`,
    `viaje`.`Fecha`
FROM (((((PERSONA INNER JOIN PACIENTE ON persona.dni=paciente.Paciente_dni)
INNER JOIN TENDRA ON paciente.Paciente_dni = tendra.Paciente_Dni)
INNER JOIN ESTADO ON estado.IdEstado =tendra.IdEstado) 
INNER JOIN REALIZA ON paciente.Paciente_dni = realiza.dni)
INNER JOIN VIAJE ON viaje.IdViaje=realiza.IdViaje)
WHERE Estado.IdEstado=3 AND viaje.Riesgo=true; 

-- -- ---------------------------------------------------------------------------------------------------------------
-- -- Septima CONSULTA
-- 7) Mostrar el carnet de vacuna de una persona
-- -- ----------------------------------------------------------------------------------------------------------------

SELECT `persona`.`dni`,
    `persona`.`Nombre`,
    `persona`.`Apellido`,
    `persona`.`FechaDeNacimiento`,
    `persona`.`Telefono`,
    `persona`.`Direccion`,
    `persona`.`ObraSocial`,
    `persona`.`sexo`,
    `vacuna`.`Nombre`,
    `enfermero`.`Enfermero_dni`
FROM (((PERSONA INNER JOIN CARNET ON persona.dni=carnet.Persona_Dni)
INNER JOIN VACUNA ON vacuna.IdVacuna=carnet.IdVacuna)
INNER JOIN ENFERMERO ON enfermero.IdEnfermero=carnet.IdEnfermero)

where persona.dni=41256842;
-- -- ---------------------------------------------------------------------------------------------------------------
-- -- OCTAVA CONSULTA
-- 8) Cantidad de pacientes Contagiados en cada hospital
-- -- ------------------------------------------------------------------------------------------------------------------ 
SELECT `hospital`.`Nombre`,count(*) AS 'Cantidad pacientes internados infectados' FROM hospital INNER JOIN planta ON hospital.IdHospital=planta.IdHospital
INNER JOIN habitacion ON (planta.IdPlanta=habitacion.IdPlanta AND hospital.IdHospital=habitacion.IdHospital)
INNER JOIN internacion ON (habitacion.IdPlanta=internacion.IdPlanta AND habitacion.IdHospital=internacion.IdHospital AND habitacion.NroHabitacion=internacion.NroHabitacion)
INNER JOIN paciente ON internacion.Paciente_Dni=paciente.Paciente_Dni
INNER JOIN tendra ON paciente.Paciente_Dni=tendra.Paciente_Dni
WHERE tendra.IdEstado=3 GROUP BY hospital.Nombre;


-- ---------------------------------------------------------------------------------------------------------------
-- -- NOVENA CONSULTA
-- 9) CANTIDAD DE PERSONAS QUE SE VACUNARON CON LAS VACUNAS DE COVID
-- -- ------------------------------------------------------------------------------------------------------------
SELECT `vacuna`.`Nombre`,count(*)  FROM VACUNA INNER JOIN CARNET ON vacuna.IdVacuna=CARNET.IdVacuna group by(vacuna.Nombre);

-- -- ---------------------------------------------------------------------------------------------------------------
-- -- DECIMA CONSULTA
-- 10) Listar las personas que se colocaron la vacuna ASTRAZENECA
-- -- ----------------------------------------------------------------------------------------------------------------
SELECT `persona`.`dni`,
    `persona`.`Nombre`,
    `persona`.`Apellido`,
	 `vacuna`.`Nombre`
FROM ((PERSONA INNER JOIN CARNET ON persona.dni=carnet.Persona_Dni)
INNER JOIN vacuna ON carnet.IdVacuna=vacuna.IdVacuna)
where carnet.IdVacuna=1 OR carnet.IdVacuna=2;

-- -- ---------------------------------------------------------------------------------------------------------------
-- -- DECIMA CONSULTA
-- 11) Enfermeros que trabajan en plantas que contiene pacientes con COVID
-- -- ----------------------------------------------------------------------------------------------------------------
SELECT `DAT`.`Enfermero_dni`,concat(`DAT`.`nombre`," ",`DAT`.`apellido`) AS 'Nombre y Apellido',`planta`.`IdPlanta`,`planta`.`Especialidad`,`hospital`.`Nombre` FROM hospital INNER JOIN planta ON hospital.IdHospital=planta.IdHospital
INNER JOIN habitacion ON (planta.IdPlanta=habitacion.IdPlanta AND hospital.IdHospital=habitacion.IdHospital)
INNER JOIN internacion ON (habitacion.IdPlanta=internacion.IdPlanta AND habitacion.IdHospital=internacion.IdHospital AND habitacion.NroHabitacion=internacion.NroHabitacion)
INNER JOIN paciente ON internacion.Paciente_Dni=paciente.Paciente_Dni
INNER JOIN tendra ON paciente.Paciente_Dni=tendra.Paciente_Dni
INNER JOIN (SELECT `enfermero`.`Enfermero_dni`,`enfermero`.`IdPlanta`,`persona`.`Nombre`,`persona`.`Apellido` FROM persona INNER JOIN enfermero ON persona.dni=enfermero.Enfermero_dni) AS DAT ON planta.idPlanta=DAT.idPlanta
WHERE tendra.IdEstado=3 group by DAT.Enfermero_dni ;

